{"ast":null,"code":"var _jsxFileName = \"/Users/tomas/Documents/GitHub/omnia/src/App.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Pocetna from './pages/Pocetna/Pocetna';\nimport NoMatch from './pages/NoMatch/NoMatch';\nimport Kontakt from './pages/Kontakt/Kontakt';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    // this simulates an async action, after which the component will render the content\n    demoAsyncCall().then(() => this.setState({\n      loading: false\n    }));\n  }\n\n  render() {\n    const loading = this.state.loading;\n\n    if (loading) {\n      // if your component doesn't have to wait for an async action, remove this block\n      return null; // render null when app is not ready\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"I'm the app\");\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Pocetna,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/kontakt\",\n      component: Kontakt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NoMatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/tomas/Documents/GitHub/omnia/src/App.jsx"],"names":["React","Component","Route","Switch","Pocetna","NoMatch","Kontakt","App","state","loading","componentDidMount","demoAsyncCall","then","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,eAAe,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1CO,KAD0C,GAClC;AACPC,MAAAA,OAAO,EAAE;AADF,KADkC;AAAA;;AAK1CC,EAAAA,iBAAiB,GAAG;AACnB;AACAC,IAAAA,aAAa,GAAGC,IAAhB,CAAqB,MAAM,KAAKC,QAAL,CAAc;AAAEJ,MAAAA,OAAO,EAAE;AAAX,KAAd,CAA3B;AACA;;AAEDK,EAAAA,MAAM,GAAG;AAAA,UACAL,OADA,GACY,KAAKD,KADjB,CACAC,OADA;;AAGR,QAAIA,OAAJ,EAAa;AACZ;AACA,aAAO,IAAP,CAFY,CAEC;AACb;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACA;;AAEDK,EAAAA,MAAM,GAAG;AACR,WACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAEE,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,EAGC,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CADD,CADD;AASA;;AA/ByC","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Pocetna from './pages/Pocetna/Pocetna';\nimport NoMatch from './pages/NoMatch/NoMatch';\nimport Kontakt from './pages/Kontakt/Kontakt';\n\nexport default class App extends Component {\n\tstate = {\n\t\tloading: true\n\t};\n\n\tcomponentDidMount() {\n\t\t// this simulates an async action, after which the component will render the content\n\t\tdemoAsyncCall().then(() => this.setState({ loading: false }));\n\t}\n\n\trender() {\n\t\tconst { loading } = this.state;\n\n\t\tif (loading) {\n\t\t\t// if your component doesn't have to wait for an async action, remove this block\n\t\t\treturn null; // render null when app is not ready\n\t\t}\n\n\t\treturn <div>I'm the app</div>;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Pocetna} />\n\t\t\t\t\t<Route path=\"/kontakt\" component={Kontakt} />\n\t\t\t\t\t<Route component={NoMatch} />\n\t\t\t\t</Switch>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}